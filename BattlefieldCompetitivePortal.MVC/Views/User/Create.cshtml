@using BattlefieldCompetitivePortal.MVC.Controllers
@model CreateUserViewModel
@{
    ViewData["Title"] = "Recruit Registration";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
            color: #ffffff;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            overflow-x: hidden;
            padding: 2rem 0;
        }

            /* Animated Background */
            body::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: radial-gradient(circle at 20% 80%, rgba(255, 107, 53, 0.15) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(255, 107, 53, 0.1) 0%, transparent 50%);
                z-index: 1;
            }

        /* Grid Pattern */
        .grid-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,107,53,0.08)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
            opacity: 0.4;
            animation: gridMove 30s linear infinite;
            z-index: 1;
        }

        @@keyframes gridMove {
            0% {
                transform: translate(0, 0);
            }

            100% {
                transform: translate(15px, 15px);
            }
        }

        /* Registration Container */
        .register-container {
            background: rgba(0, 0, 0, 0.85);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 107, 53, 0.3);
            border-radius: 15px;
            padding: 3rem;
            width: 100%;
            max-width: 500px;
            position: relative;
            z-index: 10;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.6), inset 0 1px 0 rgba(255, 255, 255, 0.1);
            margin: 1rem;
        }

            .register-container::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: linear-gradient(90deg, #ff6b35, #f7931e, #ff6b35, #f7931e);
                border-radius: 15px 15px 0 0;
                animation: gradientShift 3s ease-in-out infinite alternate;
            }

        @@keyframes gradientShift {
            0% {
                transform: translateX(-10px);
            }

            100% {
                transform: translateX(10px);
            }
        }

        /* Header */
        .register-header {
            text-align: center;
            margin-bottom: 2.5rem;
        }

        .register-title {
            font-size: 2.8rem;
            font-weight: 900;
            margin-bottom: 0.5rem;
            text-transform: uppercase;
            letter-spacing: 2px;
            background: linear-gradient(45deg, #ff6b35, #f7931e);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 0 0 30px rgba(255, 107, 53, 0.5);
        }

        .register-subtitle {
            color: rgba(255, 255, 255, 0.8);
            font-size: 1.1rem;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-bottom: 0.5rem;
        }

        .register-description {
            color: rgba(255, 255, 255, 0.6);
            font-size: 0.9rem;
            line-height: 1.4;
        }

        /* Form Styles */
        .form-row {
            display: flex;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
            position: relative;
            flex: 1;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            color: #ff6b35;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.9rem;
            letter-spacing: 1px;
        }

            .form-label .required {
                color: #f7931e;
                margin-left: 0.25rem;
            }

        .form-control {
            width: 100%;
            padding: 1rem 1.2rem;
            background: rgba(255, 255, 255, 0.05);
            border: 2px solid rgba(255, 107, 53, 0.3);
            border-radius: 8px;
            color: #ffffff;
            font-size: 1rem;
            transition: all 0.3s ease;
            backdrop-filter: blur(5px);
        }

            .form-control:focus {
                outline: none;
                border-color: #ff6b35;
                box-shadow: 0 0 20px rgba(255, 107, 53, 0.3);
                background: rgba(255, 255, 255, 0.1);
            }

            .form-control::placeholder {
                color: rgba(255, 255, 255, 0.4);
            }

        /* Select Dropdown */
        .form-select {
            width: 100%;
            padding: 1rem 1.2rem;
            background: rgba(255, 255, 255, 0.05);
            border: 2px solid rgba(255, 107, 53, 0.3);
            border-radius: 8px;
            color: #ffffff;
            font-size: 1rem;
            transition: all 0.3s ease;
            cursor: pointer;
        }

            .form-select:focus {
                outline: none;
                border-color: #ff6b35;
                box-shadow: 0 0 20px rgba(255, 107, 53, 0.3);
            }

            .form-select option {
                background: #1a1a2e;
                color: #ffffff;
                padding: 0.5rem;
            }

        /* Password Strength Indicator */
        .password-strength {
            margin-top: 0.5rem;
            font-size: 0.8rem;
        }

        .strength-weak {
            color: #ff6b6b;
        }

        .strength-medium {
            color: #ffa726;
        }

        .strength-strong {
            color: #66bb6a;
        }

        /* Buttons */
        .btn {
            width: 100%;
            padding: 1.2rem 2rem;
            border: none;
            border-radius: 8px;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 1px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 1rem;
            position: relative;
            overflow: hidden;
        }

        .btn-primary {
            background: linear-gradient(45deg, #ff6b35, #f7931e);
            color: white;
            box-shadow: 0 4px 15px rgba(255, 107, 53, 0.4);
            margin-bottom: 1rem;
        }

            .btn-primary:hover:not(:disabled) {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(255, 107, 53, 0.6);
            }

            .btn-primary:disabled {
                background: #666;
                cursor: not-allowed;
            }

        .btn-secondary {
            background: transparent;
            color: #ffffff;
            border: 2px solid rgba(255, 255, 255, 0.3);
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }

            .btn-secondary:hover {
                background: rgba(255, 255, 255, 0.1);
                border-color: rgba(255, 255, 255, 0.5);
                color: #ffffff;
                text-decoration: none;
            }

        /* Error Messages */
        .validation-summary-errors {
            background: rgba(220, 53, 69, 0.15);
            border: 1px solid rgba(220, 53, 69, 0.5);
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            color: #ff6b6b;
        }

            .validation-summary-errors ul {
                list-style: none;
                margin: 0;
                padding: 0;
            }

            .validation-summary-errors li {
                margin-bottom: 0.5rem;
            }

        .field-validation-error {
            color: #ff6b6b;
            font-size: 0.85rem;
            margin-top: 0.25rem;
            display: block;
        }

        /* Success Message */
        .success-message {
            background: rgba(76, 175, 80, 0.15);
            border: 1px solid rgba(76, 175, 80, 0.5);
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            color: #66bb6a;
            text-align: center;
        }

        /* Links */
        .auth-links {
            text-align: center;
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 1px solid rgba(255, 107, 53, 0.2);
        }

            .auth-links a {
                color: #ff6b35;
                text-decoration: none;
                font-weight: 500;
                transition: all 0.3s ease;
            }

                .auth-links a:hover {
                    color: #f7931e;
                    text-shadow: 0 0 10px rgba(255, 107, 53, 0.5);
                }

        /* Back to Home */
        .back-home {
            position: fixed;
            top: 2rem;
            left: 2rem;
            z-index: 20;
        }

            .back-home a {
                color: rgba(255, 255, 255, 0.7);
                text-decoration: none;
                font-size: 0.9rem;
                text-transform: uppercase;
                letter-spacing: 1px;
                padding: 0.5rem 1rem;
                border: 1px solid rgba(255, 255, 255, 0.3);
                border-radius: 5px;
                transition: all 0.3s ease;
            }

                .back-home a:hover {
                    color: #ff6b35;
                    border-color: #ff6b35;
                    background: rgba(255, 107, 53, 0.1);
                }

        /* Responsive */
        @@media (max-width: 768px) {
            body {
                padding: 1rem 0;
            }

            .register-container {
                margin: 0.5rem;
                padding: 2rem;
                max-width: none;
            }

            .register-title {
                font-size: 2.2rem;
            }

            .form-row {
                flex-direction: column;
                gap: 0;
            }

            .back-home {
                top: 1rem;
                left: 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="grid-overlay"></div>

    <div class="back-home">
        <a href="@Url.Action("Index", "Home")">← Base Camp</a>
    </div>

    <div class="register-container">
        <div class="register-header">
            <h1 class="register-title">Recruitment</h1>
            <p class="register-subtitle">Join the Elite Forces</p>
            <p class="register-description">Complete your soldier profile to gain battlefield access</p>
        </div>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="validation-summary-errors">
                <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="success-message">
                @TempData["SuccessMessage"]
            </div>
        }

        <form asp-action="Create" asp-controller="User" method="post" id="registerForm">
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label asp-for="Username" class="form-label">Call Sign <span class="required">*</span></label>
                <input asp-for="Username" class="form-control" placeholder="Choose your battlefield identifier" autocomplete="username" required />
                <span asp-validation-for="Username" class="field-validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="Email" class="form-label">Communication Channel <span class="required">*</span></label>
                <input asp-for="Email" class="form-control" type="email" placeholder="your.email@domain.com" autocomplete="email" required />
                <span asp-validation-for="Email" class="field-validation-error"></span>
            </div>

            <div class="form-group">
                <label asp-for="Password" class="form-label">Access Code <span class="required">*</span></label>
                <input asp-for="Password" class="form-control" type="password" placeholder="Create a secure password" autocomplete="new-password" required id="passwordField" />
                <div class="password-strength" id="passwordStrength"></div>
                <span asp-validation-for="Password" class="field-validation-error"></span>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label asp-for="Role" class="form-label">Rank Assignment <span class="required">*</span></label>
                    <select asp-for="Role" class="form-select" required>
                        <option value="">Select your role</option>
                        <option value="3">Player - Frontline Soldier</option>
                        <option value="2">Captain - Squad Leader</option>
                        <option value="1">Admin - Command Center</option>
                    </select>
                    <span asp-validation-for="Role" class="field-validation-error"></span>
                </div>

                <div class="form-group">
                    <label asp-for="PlayerRole" class="form-label">Squad Position</label>
                    <select asp-for="PlayerRole" class="form-select">
                        <option value="">Select position</option>
                        <option value="1">Starter - Primary Unit</option>
                        <option value="2">Sub - Reserve Unit</option>
                    </select>
                    <span asp-validation-for="PlayerRole" class="field-validation-error"></span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="TeamId" class="form-label">Team Assignment (Optional)</label>
                <input asp-for="TeamId" class="form-control" type="number" placeholder="Enter team ID if available" min="1" />
                <span asp-validation-for="TeamId" class="field-validation-error"></span>
            </div>

            <button type="submit" class="btn btn-primary" id="submitBtn">
                Deploy to Battlefield
            </button>

            <a href="@Url.Action("Login", "User")" class="btn btn-secondary">
                Already Have Access?
            </a>
        </form>

        <div class="auth-links">
            <p>Need assistance? <a href="@Url.Action("Index", "Home")">Return to base</a></p>
        </div>
    </div>

    <script>
        // Password strength checker
        function checkPasswordStrength(password) {
            let strength = 0;
            let feedback = '';

            if (password.length >= 8) strength++;
            if (password.match(/[a-z]/)) strength++;
            if (password.match(/[A-Z]/)) strength++;
            if (password.match(/[0-9]/)) strength++;
            if (password.match(/[^a-zA-Z0-9]/)) strength++;

            const strengthIndicator = document.getElementById('passwordStrength');

            switch(strength) {
                case 0:
                case 1:
                    feedback = 'Security Level: Compromised';
                    strengthIndicator.className = 'password-strength strength-weak';
                    break;
                case 2:
                case 3:
                    feedback = 'Security Level: Standard';
                    strengthIndicator.className = 'password-strength strength-medium';
                    break;
                case 4:
                case 5:
                    feedback = 'Security Level: Military Grade';
                    strengthIndicator.className = 'password-strength strength-strong';
                    break;
            }

            strengthIndicator.textContent = feedback;
        }

        // Form validation and submission
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('registerForm');
            const passwordField = document.getElementById('passwordField');
            const submitBtn = document.getElementById('submitBtn');

            // Password strength monitoring
            passwordField.addEventListener('input', function() {
                checkPasswordStrength(this.value);
            });

            // Form submission handling
            form.addEventListener('submit', function(e) {
                const password = passwordField.value;

                // Basic validation
                if (password.length < 6) {
                    e.preventDefault();
                    alert('Access code must be at least 6 characters for security clearance.');
                    return;
                }

                // Visual feedback
                submitBtn.textContent = 'Processing Recruitment...';
                submitBtn.disabled = true;
                form.classList.add('loading');
            });

            // Auto-focus first input
            const firstInput = document.querySelector('.form-control');
            if (firstInput) {
                firstInput.focus();
            }
        });

        // Role-based field visibility
        document.addEventListener('change', function(e) {
            if (e.target.name === 'Role') {
                const playerRoleGroup = document.querySelector('select[name="PlayerRole"]').closest('.form-group');
                const teamIdGroup = document.querySelector('input[name="TeamId"]').closest('.form-group');

                // Show/hide player role and team fields based on selected role
                if (e.target.value === '3') { // Player role
                    playerRoleGroup.style.display = 'block';
                    teamIdGroup.style.display = 'block';
                } else {
                    playerRoleGroup.style.display = 'none';
                    teamIdGroup.style.display = 'none';
                    // Clear values when hidden
                    document.querySelector('select[name="PlayerRole"]').value = '';
                    document.querySelector('input[name="TeamId"]').value = '';
                }
            }
        });
    </script>
</body>
</html>
